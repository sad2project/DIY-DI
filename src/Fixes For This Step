Step 4 Principle: Trivial Constructors
+ Tests are forced to invoke constructors and static initializers and init methods
+ Expensive initialization code thwarts unit tests
+ All constructors should be trivial
+ A constructor that does real work (such as opening a connection) should be 
refactored so that it accepts an initialized resource (such as an opened
connection) as a parameter 
  
Code changes: Lazy MarketClient Singleton
+ Any use of MarketClient class triggers a static initializer, which calls the
expensive "MarketService.fetchPrices()" method
+ MarketClient should create its singleton lazily
+ A constructor should be added for tests that avoids the expensive initialization
entirely
+ A backwards-compatible constructor can be added for product code